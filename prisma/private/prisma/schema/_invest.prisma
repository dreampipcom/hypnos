// to-do: _invest.prisma
// ---- @INT: Invest: place it. ----
// 
// Invest
// KRN Asset: Karuna: Compliments, Witnessing. +
// DPIP Asset: Pip: Criticism, Feedback. -

// Asset: Long positions. +
model InvestLongs {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  name              ILocaleString
  slug              String
  description       ILocaleString

  title             ILocaleString
  body              ILocaleString

  loggedOn          DateTime            @db.Date
  loggedFor         DateTime[]            @db.Date
  publishedOn       DateTime            @db.Date

  userOwner         User?              @relation("thoughtUserOwner", fields: [userOwnerId], references: [id])
  userOwnerId       String?             @db.ObjectId

  communityOwner        Communities?             @relation("thoughtCommunityOwner", fields: [communityOwnerId], references: [id])
  communityOwnerId      String?             @db.ObjectId

  userCreator       User?              @relation("thoughtUserCreator", fields: [userCreatorId], references: [id])
  userCreatorId     String?             @db.ObjectId

  communityCreator      Communities?             @relation("thoughtCommunityCreator", fields: [communityCreatorId], references: [id])
  communityCreatorId    String?             @db.ObjectId

  @@map("investCareEulogy")
}

// Asset: Short positions. -
model InvestShorts {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  name              ILocaleString
  slug              String
  description       ILocaleString

  title             ILocaleString
  body              ILocaleString

  loggedOn          DateTime            @db.Date
  loggedFor         DateTime[]            @db.Date
  publishedOn       DateTime            @db.Date

  userOwner         User?              @relation("thoughtUserOwner", fields: [userOwnerId], references: [id])
  userOwnerId       String?             @db.ObjectId

  communityOwner        Communities?             @relation("thoughtCommunityOwner", fields: [communityOwnerId], references: [id])
  communityOwnerId      String?             @db.ObjectId

  userCreator       User?              @relation("thoughtUserCreator", fields: [userCreatorId], references: [id])
  userCreatorId     String?             @db.ObjectId

  communityCreator      Communities?             @relation("thoughtCommunityCreator", fields: [communityCreatorId], references: [id])
  communityCreatorId    String?             @db.ObjectId

  @@map("investCareImprovementPlan")
}

// Types of Assets (Portrait of asset: NFT, Promises, Fungible Derivatives: Curse Gossip: DPIP:D, Monetary Responsibility: 1,000.00 US Dollars investment: DPIP:O, etc.FX:EURUSD, FX:GBPUSD, DPIP:D, DPIP:H, KRN:O, DPIP:ETH)
model InvestTypes {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  name              ILocaleString
  slug              String
  description       ILocaleString

  title             ILocaleString
  body              ILocaleString

  loggedOn          DateTime            @db.Date
  loggedFor         DateTime[]            @db.Date
  publishedOn       DateTime            @db.Date

  userOwner         User?              @relation("thoughtUserOwner", fields: [userOwnerId], references: [id])
  userOwnerId       String?             @db.ObjectId

  communityOwner        Communities?             @relation("thoughtCommunityOwner", fields: [communityOwnerId], references: [id])
  communityOwnerId      String?             @db.ObjectId

  userCreator       User?              @relation("thoughtUserCreator", fields: [userCreatorId], references: [id])
  userCreatorId     String?             @db.ObjectId

  communityCreator      Communities?             @relation("thoughtCommunityCreator", fields: [communityCreatorId], references: [id])
  communityCreatorId    String?             @db.ObjectId

  @@map("careTypes")
}

model InvestPortfolios {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  name              ILocaleString
  slug              String
  description       ILocaleString

  title             ILocaleString
  body              ILocaleString

  loggedOn          DateTime            @db.Date
  loggedFor         DateTime[]            @db.Date
  publishedOn       DateTime            @db.Date

  userOwner         User?              @relation("thoughtUserOwner", fields: [userOwnerId], references: [id])
  userOwnerId       String?             @db.ObjectId

  communityOwner        Communities?             @relation("thoughtCommunityOwner", fields: [communityOwnerId], references: [id])
  communityOwnerId      String?             @db.ObjectId

  userCreator       User?              @relation("thoughtUserCreator", fields: [userCreatorId], references: [id])
  userCreatorId     String?             @db.ObjectId

  communityCreator      Communities?             @relation("thoughtCommunityCreator", fields: [communityCreatorId], references: [id])
  communityCreatorId    String?             @db.ObjectId

  @@map("careTypes")
}