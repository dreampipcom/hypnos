// to-do: __nexus-conf.prisma
// ---- @PRIVATE: Nexus: Bonds. ----
// 
// Nexus
// Time Nexus
model NexusDays {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  name              ILocaleString
  slug              String
  description       ILocaleString

  title             ILocaleString
  body              ILocaleString

  purchaseValue     Float
  settledValue      Float

  userOwner         User?              @relation("investmentUserOwner", fields: [userOwnerId], references: [id])
  userOwnerId       String?             @db.ObjectId

  communityOwner        Communities?             @relation("investmentCommunityOwner", fields: [communityOwnerId], references: [id])
  communityOwnerId      String?             @db.ObjectId

  userCreator       User?              @relation("investmentUserCreator", fields: [userCreatorId], references: [id])
  userCreatorId     String?             @db.ObjectId

  communityCreator      Communities?             @relation("investmentCommunityCreator", fields: [communityCreatorId], references: [id])
  communityCreatorId    String?             @db.ObjectId

  @@map("nexusDays")
}

model NexusWeeks {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  name              ILocaleString
  slug              String
  description       ILocaleString

  title             ILocaleString
  body              ILocaleString

  purchaseValue     Float
  settledValue      Float

  userOwner         User?              @relation("investmentUserOwner", fields: [userOwnerId], references: [id])
  userOwnerId       String?             @db.ObjectId

  communityOwner        Communities?             @relation("investmentCommunityOwner", fields: [communityOwnerId], references: [id])
  communityOwnerId      String?             @db.ObjectId

  userCreator       User?              @relation("investmentUserCreator", fields: [userCreatorId], references: [id])
  userCreatorId     String?             @db.ObjectId

  communityCreator      Communities?             @relation("investmentCommunityCreator", fields: [communityCreatorId], references: [id])
  communityCreatorId    String?             @db.ObjectId

  @@map("nexusDays")
}

model NexusQuarters {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  name              ILocaleString
  slug              String
  description       ILocaleString

  title             ILocaleString
  body              ILocaleString

  purchaseValue     Float
  settledValue      Float

  userOwner         User?              @relation("investmentUserOwner", fields: [userOwnerId], references: [id])
  userOwnerId       String?             @db.ObjectId

  communityOwner        Communities?             @relation("investmentCommunityOwner", fields: [communityOwnerId], references: [id])
  communityOwnerId      String?             @db.ObjectId

  userCreator       User?              @relation("investmentUserCreator", fields: [userCreatorId], references: [id])
  userCreatorId     String?             @db.ObjectId

  communityCreator      Communities?             @relation("investmentCommunityCreator", fields: [communityCreatorId], references: [id])
  communityCreatorId    String?             @db.ObjectId

  @@map("nexusDays")
}

model NexusYears {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  name              ILocaleString
  slug              String
  description       ILocaleString

  title             ILocaleString
  body              ILocaleString

  purchaseValue     Float
  settledValue      Float

  userOwner         User?              @relation("investmentUserOwner", fields: [userOwnerId], references: [id])
  userOwnerId       String?             @db.ObjectId

  communityOwner        Communities?             @relation("investmentCommunityOwner", fields: [communityOwnerId], references: [id])
  communityOwnerId      String?             @db.ObjectId

  userCreator       User?              @relation("investmentUserCreator", fields: [userCreatorId], references: [id])
  userCreatorId     String?             @db.ObjectId

  communityCreator      Communities?             @relation("investmentCommunityCreator", fields: [communityCreatorId], references: [id])
  communityCreatorId    String?             @db.ObjectId

  @@map("nexusDays")
}

model NexusMoments {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  name              ILocaleString
  slug              String
  description       ILocaleString

  title             ILocaleString
  body              ILocaleString

  purchaseValue     Float
  settledValue      Float

  userOwner         User?              @relation("investmentUserOwner", fields: [userOwnerId], references: [id])
  userOwnerId       String?             @db.ObjectId

  communityOwner        Communities?             @relation("investmentCommunityOwner", fields: [communityOwnerId], references: [id])
  communityOwnerId      String?             @db.ObjectId

  userCreator       User?              @relation("investmentUserCreator", fields: [userCreatorId], references: [id])
  userCreatorId     String?             @db.ObjectId

  communityCreator      Communities?             @relation("investmentCommunityCreator", fields: [communityCreatorId], references: [id])
  communityCreatorId    String?             @db.ObjectId

  @@map("nexusDays")
}

// Space Nexus
model NexusSpaces {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  name              ILocaleString
  slug              String
  description       ILocaleString

  title             ILocaleString
  body              ILocaleString

  purchaseValue     Float
  settledValue      Float

  userOwner         User?              @relation("investmentUserOwner", fields: [userOwnerId], references: [id])
  userOwnerId       String?             @db.ObjectId

  communityOwner        Communities?             @relation("investmentCommunityOwner", fields: [communityOwnerId], references: [id])
  communityOwnerId      String?             @db.ObjectId

  userCreator       User?              @relation("investmentUserCreator", fields: [userCreatorId], references: [id])
  userCreatorId     String?             @db.ObjectId

  communityCreator      Communities?             @relation("investmentCommunityCreator", fields: [communityCreatorId], references: [id])
  communityCreatorId    String?             @db.ObjectId

  @@map("nexusDays")
}

// Context Nexus
model NexusContexts {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  name              ILocaleString
  slug              String
  description       ILocaleString

  title             ILocaleString
  body              ILocaleString

  purchaseValue     Float
  settledValue      Float

  userOwner         User?              @relation("investmentUserOwner", fields: [userOwnerId], references: [id])
  userOwnerId       String?             @db.ObjectId

  communityOwner        Communities?             @relation("investmentCommunityOwner", fields: [communityOwnerId], references: [id])
  communityOwnerId      String?             @db.ObjectId

  userCreator       User?              @relation("investmentUserCreator", fields: [userCreatorId], references: [id])
  userCreatorId     String?             @db.ObjectId

  communityCreator      Communities?             @relation("investmentCommunityCreator", fields: [communityCreatorId], references: [id])
  communityCreatorId    String?             @db.ObjectId

  @@map("nexusDays")
}