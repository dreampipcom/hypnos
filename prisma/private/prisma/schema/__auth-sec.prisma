// to-do: __auth-sec.prisma
// ---- @PRIVATE: App Governance. ----
// 
// @auth stuff.
model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String @map("provider_account_id")
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("account")
}

model Session {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken    String          @unique
  userId          String          @db.ObjectId
  expires         DateTime
  user            User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  mailboxes       BeMailboxes[]   @relation("beMailboxesActiveSession")
  mailboxesTokens String[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("session")
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
  @@map("verificationToken")
}

// Optional for WebAuthn support
model Authenticator {
  credentialID         String  @id @map("_id")
  userId               String  @db.ObjectId
  providerAccountId    String
  credentialPublicKey  String
  counter              Int
  credentialDeviceType String
  credentialBackedUp   Boolean
  transports           String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([userId, credentialID])
  @@map("authenticator")
}

// Users.
model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  // Optional for WebAuthn support
  Authenticator Authenticator[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  communities                Communities[]          @relation(fields: [communitiesIds], references: [id])
  communitiesIds             String[]          @db.ObjectId
  location              ILocation?

  services              Services[]      @relation("userServices", fields: [servicesIds], references: [id])
  servicesIds           String[]        @db.ObjectId

  abilities             Abilities[]     @relation("userAbilities", fields: [abilitiesIds], references: [id])
  abilitiesIds          String[]        @db.ObjectId

  authorityOn           InvestContracts[]     @relation("investUserAuthorities", fields: [authorityOnIds], references: [id])
  authorityOnIds          String[]        @db.ObjectId

  signedOn                InvestContracts[]     @relation("investUserSignatures", fields: [signedOnIds], references: [id])
  signedOnIds          String[]        @db.ObjectId

  // settings           String
  favorites             MakeListings[]        @relation("favorites", fields: [favoritesIds], references: [id])
  favoritesIds          String[]          @db.ObjectId

  favoritesStrings             String[] 

  messagesSent          Messages[]        @relation("userMessagesSent")
  messagesSentIds       String[]          @db.ObjectId

  messagesReceived      Messages[]        @relation("userMessagesReceived", fields: [messagesReceivedIds], references: [id])
  messagesReceivedIds   String[]          @db.ObjectId

  roles                 Roles[]           @relation("roles", fields: [rolesIds], references: [id])
  rolesIds              String[]          @db.ObjectId 

  // user generated content

  ownedCommunities           Communities[]          @relation("ownedCommunities")
  createdCommunities         Communities[]          @relation("createdCommunities")

  ownedListings         MakeListings[]        @relation("makeListingUserOwner")
  createdListings       MakeListings[]        @relation("makeListingUserCreator")

  ownedMessages         Messages[]        @relation("messageUserOwner")
  createdMessages       Messages[]        @relation("messageUserCreator")

  ownedWriteIdeas            WriteIdeas[]          @relation("writeIdeasUserOwner")
  createdWriteIdeas          WriteIdeas[]          @relation("writeIdeasUserCreator")

  ownedWritePublications            WritePublications[]          @relation("writePublicationsUserOwner")
  createdWritePublications          WritePublications[]          @relation("writePublicationsUserCreator")

  ownedWriteWits            WriteWits[]          @relation("writeWitsUserOwner")
  createdWriteWits          WriteWits[]          @relation("writeWitsUserCreator")

  ownedWriteCogitos            WriteCogitos[]          @relation("writeCogitosUserOwner")
  createdWriteCogitos          WriteCogitos[]          @relation("writeCogitosUserCreator")

  ownedWriteHopes            WriteHopes[]          @relation("writeHopesUserOwner")
  createdWriteHopes          WriteHopes[]          @relation("writeHopesUserCreator")

  ownedWriteOpinions            WriteOpinions[]          @relation("writeOpinionsUserOwner")
  createdWriteOpinions          WriteOpinions[]          @relation("writeOpinionsUserCreator")

  ownedWriteThreads            WriteThreads[]          @relation("writeThreadsUserOwner")
  createdWriteThreads          WriteThreads[]          @relation("writeThreadsUserCreator")

  ownedWriteLearnings            WriteLearnings[]          @relation("writeLearningsUserOwner")
  createdWriteLearnings          WriteLearnings[]          @relation("writeLearningsUserCreator")

  ownedWriteDocs            WriteDocs[]          @relation("writeDocsUserOwner")
  createdWriteDocs          WriteDocs[]          @relation("writeDocsUserCreator")

  ownedWriteMedDocs            WriteMedDocs[]          @relation("writeMedDocsUserOwner")
  createdWriteMedDocs          WriteMedDocs[]          @relation("writeMedDocsUserCreator")

  ownedViewTime            ViewTime[]          @relation("viewTimeUserOwner")
  createdViewTime          ViewTime[]          @relation("viewTimeUserCreator")

  ownedViewSpaces            ViewSpaces[]          @relation("viewSpacesUserOwner")
  createdViewSpaces          ViewSpaces[]          @relation("viewSpacesUserCreator")

  ownedViewCharts            ViewCharts[]          @relation("viewChartsUserOwner")
  createdViewCharts          ViewCharts[]          @relation("viewChartsUserCreator")

  ownedViewDashboards            ViewDashboards[]          @relation("viewDashboardsUserOwner")
  createdViewDashboards          ViewDashboards[]          @relation("viewDashboardsUserCreator")

  ownedViewListings            ViewListings[]          @relation("viewListingsUserOwner")
  createdViewListings          ViewListings[]          @relation("viewListingsUserCreator")

  ownedMakeRecipes            MakeRecipes[]          @relation("makeRecipesUserOwner")
  createdMakeRecipes          MakeRecipes[]          @relation("makeRecipesUserCreator")

  ownedMakeListings            MakeListings[]          @relation("makeListingsUserOwner")
  createdMakeListings          MakeListings[]          @relation("makeListingsUserCreator")

  ownedMakeSpaces            MakeSpaces[]          @relation("makeSpacesUserOwner")
  createdMakeSpaces          MakeSpaces[]          @relation("makeSpacesUserCreator")

  ownedMakeProcurements            MakeProcurements[]          @relation("makeProcurementsUserOwner")
  createdMakeProcurements          MakeProcurements[]          @relation("makeProcurementsUserCreator")

  ownedMakeThings            MakeThings[]          @relation("makeThingsUserOwner")
  createdMakeThings          MakeThings[]          @relation("makeThingsUserCreator")

  ownedMakeInventories            MakeInventories[]          @relation("makeInventoriesUserOwner")
  createdMakeInventories          MakeInventories[]          @relation("makeInventoriesUserCreator")

  ownedMakeItems            MakeItems[]          @relation("makeItemsUserOwner")
  createdMakeItems          MakeItems[]          @relation("makeItemsUserCreator")

  ownedMakeFunctions            MakeFunctions[]          @relation("makeFunctionsUserOwner")
  createdMakeFunctions          MakeFunctions[]          @relation("makeFunctionsUserCreator")

  ownedMakeProfiles            MakeYou[]          @relation("makeYouUserOwner")
  createdMakeProfiles          MakeYou[]          @relation("makeYouUserCreator")

  ownedFeelLike            FeelLike[]          @relation("feelLikeUserOwner")
  createdFeelLike          FeelLike[]          @relation("feelLikeUserCreator")

  ownedFeelMoods            FeelMoods[]          @relation("feelMoodsUserOwner")
  createdFeelMoods          FeelMoods[]          @relation("feelMoodsUserCreator")

  ownedFeelYou            FeelYou[]          @relation("feelYouUserOwner")
  createdFeelYou          FeelYou[]          @relation("feelYouUserCreator")

  ownedFeelConfessions            FeelConfessions[]          @relation("feelConfessionsUserOwner")
  createdFeelConfessions          FeelConfessions[]          @relation("feelConfessionsUserCreator")

  ownedFeelDreams            FeelDreams[]          @relation("feelDreamsUserOwner")
  createdFeelDreams          FeelDreams[]          @relation("feelDreamsUserCreator")

  ownedFeelCravings            FeelCravings[]          @relation("feelCravingsUserOwner")
  createdFeelCravings          FeelCravings[]          @relation("feelCravingsUserCreator")

  ownedFeelSymptoms            FeelSymptoms[]          @relation("feelSymptomsUserOwner")
  createdFeelSymptoms          FeelSymptoms[]          @relation("feelSymptomsUserCreator")

  ownedInvestTransactions            InvestTransactions[]          @relation("investTransactionsUserOwner")
  createdInvestTransactions          InvestTransactions[]          @relation("investTransactionsUserCreator")

  ownedInvestWallets            InvestWallets[]          @relation("investWalletsUserOwner")
  createdInvestWallets          InvestWallets[]          @relation("investWalletsUserCreator")

  ownedInvestTypes            InvestTypes[]          @relation("investTypesUserOwner")
  createdInvestTypes          InvestTypes[]          @relation("investTypesUserCreator")

  ownedInvestIncomes            InvestIncomes[]          @relation("investIncomesUserOwner")
  createdInvestIncomes          InvestIncomes[]          @relation("investIncomesUserCreator")

  ownedInvestExpenses            InvestExpenses[]          @relation("investExpensesUserOwner")
  createdInvestExpenses          InvestExpenses[]          @relation("investExpensesUserCreator")

  ownedInvestContracts            InvestContracts[]          @relation("investContractsUserOwner")
  createdInvestContracts          InvestContracts[]          @relation("investContractsUserCreator")

  ownedInvestPositions          InvestPositions[]          @relation("investPositionsUserOwner")
  createdInvestPositions         InvestPositions[]          @relation("investPositionsUserCreator")

  ownedInvestSharedPositions          InvestSharedPositions[]          @relation("investSharedPositionsUserOwner")
  createdInvestSharedPositions         InvestSharedPositions[]          @relation("investSharedPositionsUserCreator")

  ownedInvestPortfolios          InvestPortfolios[]          @relation("investPortfoliosUserOwner")
  createdInvestPortfolios         InvestPortfolios[]          @relation("investPortfoliosUserCreator")

  ownedInvestSharedPortfolios          InvestSharedPortfolios[]          @relation("investSharedPortfoliosUserOwner")
  createdInvestSharedPortfolios         InvestSharedPortfolios[]          @relation("investSharedPortfoliosUserCreator")

  ownedDoDos            Dos[]          @relation("doDosUserOwner")
  createdDoDos          Dos[]          @relation("doDosUserCreator")

  ownedDoQuests         DoQuests[]          @relation("doQuestsUserOwner")
  createdDoQuests       DoQuests[]          @relation("doQuestsUserCreator")

  ownedDoTypes         DoTypes[]          @relation("doTypesUserOwner")
  createdDoTypes       DoTypes[]          @relation("doTypesUserCreator")

  ownedDoContexts         DoContexts[]          @relation("doContextsUserOwner")
  createdDoContexts       DoContexts[]          @relation("doContextsUserCreator")

  ownedDoRoutines         DoRoutines[]          @relation("doRoutinesUserOwner")
  createdDoRoutines       DoRoutines[]          @relation("doRoutinesUserCreator")

  ownedDoDifficulties         DoDifficulties[]          @relation("doDifficultiesUserOwner")
  createdDoDifficulties       DoDifficulties[]          @relation("doDifficultiesUserCreator")

  ownedDoModes         DoModes[]          @relation("doModesUserOwner")
  createdDoModes       DoModes[]          @relation("doModesUserCreator")

  ownedDoProducts         DoProducts[]          @relation("doProductsUserOwner")
  createdDoProducts       DoProducts[]          @relation("doProductsUserCreator")

  ownedDoQuestTypes         DoQuestTypes[]          @relation("doQuestTypesUserOwner")
  createdDoQuestTypes       DoQuestTypes[]          @relation("doQuestTypesUserCreator")

  ownedDoScores         DoScores[]          @relation("doScoresUserOwner")
  createdDoScores       DoScores[]          @relation("doScoresUserCreator")

  ownedDoLogs         DoLogs[]          @relation("doLogsUserOwner")
  createdDoLogs       DoLogs[]          @relation("doLogsUserCreator")

  ownedDoReports         DoReports[]          @relation("doReportsUserOwner")
  createdDoReports       DoReports[]          @relation("doReportsUserCreator")

  ownedDoYou            DoYou[]          @relation("doYouUserOwner")
  createdDoYou          DoYou[]          @relation("doYouUserCreator")

  ownedDoSquads            DoSquads[]          @relation("doSquadsUserOwner")
  createdDoSquads          DoSquads[]          @relation("doSquadsUserCreator")

  ownedDoDirectories            DoDirectories[]          @relation("doDirectoriesUserOwner")
  createdDoDirectories          DoDirectories[]          @relation("doDirectoriesUserCreator")

  ownedBeCharacters            BeCharacters[]          @relation("beCharactersUserOwner")
  createdBeCharacters          BeCharacters[]          @relation("beCharactersUserCreator")

  ownedBeTopics            BeTopics[]          @relation("beTopicsUserOwner")
  createdBeTopics          BeTopics[]          @relation("beTopicsUserCreator")

  ownedBeAwards            BeAwards[]          @relation("beAwardsUserOwner")
  createdBeAwards          BeAwards[]          @relation("beAwardsUserCreator")

  ownedBeSocial            BeSocial[]          @relation("beSocialUserOwner")
  createdBeSocial          BeSocial[]          @relation("beSocialUserCreator")

  ownedBeDeals            BeDeals[]          @relation("beDealsUserOwner")
  createdBeDeals          BeDeals[]          @relation("beDealsUserCreator")

  ownedBeContacts            BeContacts[]          @relation("beContactsUserOwner")
  createdBeContacts          BeContacts[]          @relation("beContactsUserCreator")
  managedBeContacts            BeContacts[]          @relation("beContactsUserManager")

  ownedBeRelations            BeRelations[]          @relation("beRelationsUserOwner")
  createdBeRelations          BeRelations[]          @relation("beRelationsUserCreator")

  ownedBeCourtships            BeCourtships[]          @relation("beCourtshipsUserOwner")
  createdBeCourtships          BeCourtships[]          @relation("beCourtshipsUserCreator")

  ownedBeMailboxes            BeMailboxes[]          @relation("beMailboxesUserOwner")
  createdBeMailboxes          BeMailboxes[]          @relation("beMailboxesUserCreator")

  ownedBeLetters            BeLetters[]          @relation("beLettersUserOwner")
  createdBeLetters          BeLetters[]          @relation("beLettersUserCreator")

  ownedBeCalendars            BeCalendars[]          @relation("beCalendarsUserOwner")
  createdBeCalendars          BeCalendars[]          @relation("beCalendarsUserCreator")

  ownedBeEvents            BeEvents[]          @relation("beEventsUserOwner")
  createdBeEvents          BeEvents[]          @relation("beEventsUserCreator")

  ownedBeSocialCommunities            BeSocialCommunities[]          @relation("beSocialCommunitiesUserOwner")
  createdBeSocialCommunities          BeSocialCommunities[]          @relation("beSocialCommunitiesUserCreator")

  ownedNexusDays            NexusDays[]          @relation("nexusDaysUserOwner")
  createdNexusDays          NexusDays[]          @relation("nexusDaysUserCreator")

  ownedNexusWeeks            NexusWeeks[]          @relation("nexusWeeksUserOwner")
  createdNexusWeeks          NexusWeeks[]          @relation("nexusWeeksUserCreator")

  ownedNexusQuarters            NexusQuarters[]          @relation("nexusQuartersUserOwner")
  createdNexusQuarters          NexusQuarters[]          @relation("nexusQuartersUserCreator")

  ownedNexusYears            NexusYears[]          @relation("nexusYearsUserOwner")
  createdNexusYears          NexusYears[]          @relation("nexusYearsUserCreator")

  ownedNexusMoments            NexusMoments[]          @relation("nexusMomentsUserOwner")
  createdNexusMoments          NexusMoments[]          @relation("nexusMomentsUserCreator")

  ownedNexusSpaces            NexusSpaces[]          @relation("nexusSpacesUserOwner")
  createdNexusSpaces          NexusSpaces[]          @relation("nexusSpacesUserCreator")

  ownedNexusContexts            NexusContexts[]          @relation("nexusContextsUserOwner")
  createdNexusContexts          NexusContexts[]          @relation("nexusContextsUserCreator")

  ownedServices         Services[]      @relation("serviceUserOwner")
  createdServices       Services[]      @relation("serviceUserCreator")

  ownedFeatures         Features[]      @relation("featureUserOwner")
  createdFeatures       Features[]      @relation("featureUserCreator")

  ownedAbilities        Abilities[]     @relation("abilityUserOwner")
  createdAbilities      Abilities[]     @relation("abilityUserCreator")

  @@map("user")
}

// User Groups.
model Communities {
  id                    String            @id @default(auto()) @map("_id") @db.ObjectId
  users                 User[]           @relation(fields: [usersIds], references: [id])
  usersIds              String[]          @db.ObjectId

  status                ECommunitiesStatus

  name                  String
  description           String
  urls                  String[]
  image                 String?

  favorites             MakeListings[]        @relation("communityFavorites", fields: [favoritesIds], references: [id])
  favoritesIds          String[]          @db.ObjectId

  ownedListings         MakeListings[]        @relation("listingCommunityOwner")
  createdListings       MakeListings[]        @relation("listingCommunityCreator")

  ownedMessages         Messages[]        @relation("messageCommunityOwner")
  createdMessages       Messages[]        @relation("messageCommunityCreator")

  services              Services[]      @relation("communityServices", fields: [servicesIds], references: [id])
  servicesIds           String[]        @db.ObjectId

  abilities             Abilities[]     @relation("communityAbilities", fields: [abilitiesIds], references: [id])
  abilitiesIds          String[]        @db.ObjectId

  authorityOn           InvestContracts[]     @relation("investCommunityAuthorities", fields: [authorityOnIds], references: [id])
  authorityOnIds          String[]        @db.ObjectId

  signedOn                InvestContracts[]     @relation("investCommunitySignatures", fields: [signedOnIds], references: [id])
  signedOnIds          String[]        @db.ObjectId

  ownedServices         Services[]      @relation("serviceCommunityOwner")
  createdServices       Services[]      @relation("serviceCommunityCreator")

  ownedFeatures         Features[]      @relation("featureCommunityOwner")
  createdFeatures       Features[]      @relation("featureCommunityCreator")

  ownedAbilities        Abilities[]     @relation("abilityCommunityOwner")
  createdAbilities      Abilities[]     @relation("abilityCommunityCreator")

  ownedWriteIdeas            WriteIdeas[]          @relation("writeIdeasCommunityOwner")
  createdWriteIdeas          WriteIdeas[]          @relation("writeIdeasCommunityCreator")

  ownedWritePublications            WritePublications[]          @relation("writePublicationsCommunityOwner")
  createdPublications          WritePublications[]          @relation("writePublicationsCommunityCreator")

  ownedWriteWits            WriteWits[]          @relation("writeWitsCommunityOwner")
  createdWriteWits          WriteWits[]          @relation("writeWitsCommunityCreator")

  ownedWriteCogitos            WriteCogitos[]          @relation("writeCogitosCommunityOwner")
  createdWriteCogitos          WriteCogitos[]          @relation("writeCogitosCommunityCreator")

  ownedWriteHopes            WriteHopes[]          @relation("writeHopesCommunityOwner")
  createdWriteHopes          WriteHopes[]          @relation("writeHopesCommunityCreator")

  ownedWriteOpinions            WriteOpinions[]          @relation("writeOpinionsCommunityOwner")
  createdWriteOpinions          WriteOpinions[]          @relation("writeOpinionsCommunityCreator")

  ownedWriteThreads            WriteThreads[]          @relation("writeThreadsCommunityOwner")
  createdWriteThreads          WriteThreads[]          @relation("writeThreadsCommunityCreator")

  ownedWriteLearnings            WriteLearnings[]          @relation("writeLearningsCommunityOwner")
  createdWriteLearnings          WriteLearnings[]          @relation("writeLearningsCommunityCreator")

  ownedWriteDocs            WriteDocs[]          @relation("writeDocsCommunityOwner")
  createdWriteDocs          WriteDocs[]          @relation("writeDocsCommunityCreator")

  ownedWriteMedDocs            WriteMedDocs[]          @relation("writeMedDocsCommunityOwner")
  createdWriteMedDocs          WriteMedDocs[]          @relation("writeMedDocsCommunityCreator")

  ownedViewTime            ViewTime[]          @relation("viewTimeCommunityOwner")
  createdViewTime          ViewTime[]          @relation("viewTimeCommunityCreator")

  ownedViewSpaces            ViewSpaces[]          @relation("viewSpacesCommunityOwner")
  createdViewSpaces          ViewSpaces[]          @relation("viewSpacesCommunityCreator")

  ownedViewCharts            ViewCharts[]          @relation("viewChartsCommunityOwner")
  createdViewCharts          ViewCharts[]          @relation("viewChartsCommunityCreator")

  ownedViewDashboards            ViewDashboards[]          @relation("viewDashboardsCommunityOwner")
  createdViewDashboards          ViewDashboards[]          @relation("viewDashboardsCommunityCreator")

  ownedViewListings            ViewListings[]          @relation("viewListingsCommunityOwner")
  createdViewListings          ViewListings[]          @relation("viewListingsCommunityCreator")

  ownedMakeRecipes            MakeRecipes[]          @relation("makeRecipesCommunityOwner")
  createdMakeRecipes          MakeRecipes[]          @relation("makeRecipesCommunityCreator")

  ownedMakeListings            MakeListings[]          @relation("makeListingsCommunityOwner")
  createdMakeListings          MakeListings[]          @relation("makeListingsCommunityCreator")

  ownedMakeSpaces            MakeSpaces[]          @relation("makeSpacesCommunityOwner")
  createdMakeSpaces          MakeSpaces[]          @relation("makeSpacesCommunityCreator")

  ownedMakeProcurements            MakeProcurements[]          @relation("makeProcurementsCommunityOwner")
  createdMakeProcurements          MakeProcurements[]          @relation("makeProcurementsCommunityCreator")

  ownedMakeThings            MakeThings[]          @relation("makeThingsCommunityOwner")
  createdMakeThings          MakeThings[]          @relation("makeThingsCommunityCreator")

  ownedMakeInventories            MakeInventories[]          @relation("makeInventoriesCommunityOwner")
  createdMakeInventories          MakeInventories[]          @relation("makeInventoriesCommunityCreator")

  ownedMakeItems            MakeItems[]          @relation("makeItemsCommunityOwner")
  createdMakeItems          MakeItems[]          @relation("makeItemsCommunityCreator")

  ownedMakeFunctions            MakeFunctions[]          @relation("makeFunctionsCommunityOwner")
  createdMakeFunctions          MakeFunctions[]          @relation("makeFunctionsCommunityCreator")

  ownedMakeProfiles            MakeYou[]          @relation("makeYouCommunityOwner")
  createdMakeProfiles          MakeYou[]          @relation("makeYouCommunityCreator")

  ownedInvestTransactions            InvestTransactions[]          @relation("investTransactionsCommunityOwner")
  createdInvestTransactions          InvestTransactions[]          @relation("investTransactionsCommunityCreator")

  ownedInvestTypes            InvestTypes[]          @relation("investTypesCommunityOwner")
  createdInvestTypes          InvestTypes[]          @relation("investTypesCommunityCreator")

  ownedInvestWallets            InvestWallets[]          @relation("investWalletsCommunityOwner")
  createdInvestWallets          InvestWallets[]          @relation("investWalletsCommunityCreator")

  ownedInvestIncomes            InvestIncomes[]          @relation("investIncomesCommunityOwner")
  createdInvestIncomes          InvestIncomes[]          @relation("investIncomesCommunityCreator")

  ownedInvestExpenses            InvestExpenses[]          @relation("investExpensesCommunityOwner")
  createdInvestExpenses          InvestExpenses[]          @relation("investExpensesCommunityCreator")

  ownedInvestContracts            InvestContracts[]          @relation("investContractsCommunityOwner")
  createdInvestContracts          InvestContracts[]          @relation("investContractsCommunityCreator")

  ownedInvestPositions          InvestPositions[]          @relation("investPositionsCommunityOwner")
  createdInvestPositions         InvestPositions[]          @relation("investPositionsCommunityCreator")

  ownedInvestSharedPositions          InvestSharedPositions[]          @relation("investSharedPositionsCommunityOwner")
  createdInvestSharedPositions         InvestSharedPositions[]          @relation("investSharedPositionsCommunityCreator")

  ownedInvestPortfolios          InvestPortfolios[]          @relation("investPortfoliosCommunityOwner")
  createdInvestPortfolios         InvestPortfolios[]          @relation("investPortfoliosCommunityCreator")

  ownedInvestSharedPortfolios          InvestSharedPortfolios[]          @relation("investSharedPortfoliosCommunityOwner")
  createdInvestSharedPortfolios         InvestSharedPortfolios[]          @relation("investSharedPortfoliosCommunityCreator")

  ownedDoDos            Dos[]          @relation("doDosCommunityOwner")
  createdDoDos          Dos[]          @relation("doDosCommunityCreator")

  ownedDoQuests         DoQuests[]          @relation("doQuestsCommunityOwner")
  createdDoQuests       DoQuests[]          @relation("doQuestsCommunityCreator")

  ownedDoTypes         DoTypes[]          @relation("doTypesCommunityOwner")
  createdDoTypes       DoTypes[]          @relation("doTypesCommunityCreator")

  ownedDoContexts         DoContexts[]          @relation("doContextsCommunityOwner")
  createdDoContexts       DoContexts[]          @relation("doContextsCommunityCreator")

  ownedDoRoutines         DoRoutines[]          @relation("doRoutinesCommunityOwner")
  createdDoRoutines       DoRoutines[]          @relation("doRoutinesCommunityCreator")

  ownedDoDifficulties         DoDifficulties[]          @relation("doDifficultiesCommunityOwner")
  createdDoDifficulties       DoDifficulties[]          @relation("doDifficultiesCommunityCreator")

  ownedDoModes         DoModes[]          @relation("doModesCommunityOwner")
  createdDoModes       DoModes[]          @relation("doModesCommunityCreator")

  ownedDoProducts         DoProducts[]          @relation("doProductsCommunityOwner")
  createdDoProducts       DoProducts[]          @relation("doProductsCommunityCreator")

  ownedDoQuestTypes         DoQuestTypes[]          @relation("doQuestTypesCommunityOwner")
  createdDoQuestTypes       DoQuestTypes[]          @relation("doQuestTypesCommunityCreator")

  ownedDoScores         DoScores[]          @relation("doScoresCommunityOwner")
  createdDoScores       DoScores[]          @relation("doScoresCommunityCreator")

  ownedDoLogs         DoLogs[]          @relation("doLogsCommunityOwner")
  createdDoLogs       DoLogs[]          @relation("doLogsCommunityCreator")

  ownedDoReports         DoReports[]          @relation("doReportsCommunityOwner")
  createdDoReports       DoReports[]          @relation("doReportsCommunityCreator")

  ownedDoYou            DoYou[]          @relation("doYouCommunityOwner")
  createdDoYou          DoYou[]          @relation("doYouCommunityCreator")

  ownedDoSquads            DoSquads[]          @relation("doSquadsCommunityOwner")
  createdDoSquads          DoSquads[]          @relation("doSquadsCommunityCreator")

  ownedDoDirectories            DoDirectories[]          @relation("doDirectoriesCommunityOwner")
  createdDoDirectories          DoDirectories[]          @relation("doDirectoriesCommunityCreator")

  ownedBeCharacters            BeCharacters[]          @relation("beCharactersCommunityOwner")
  createdBeCharacters          BeCharacters[]          @relation("beCharactersCommunityCreator")

  ownedBeTopics            BeTopics[]          @relation("beTopicsCommunityOwner")
  createdBeTopics          BeTopics[]          @relation("beTopicsCommunityCreator")

  ownedBeAwards            BeAwards[]          @relation("beAwardsCommunityOwner")
  createdBeAwards          BeAwards[]          @relation("beAwardsCommunityCreator")

  ownedBeSocial            BeSocial[]          @relation("beSocialCommunityOwner")
  createdBeSocial          BeSocial[]          @relation("beSocialCommunityCreator")

  ownedBeDeals            BeDeals[]          @relation("beDealsCommunityOwner")
  createdBeDeals          BeDeals[]          @relation("beDealsCommunityCreator")

  ownedBeContacts            BeContacts[]          @relation("beContactsCommunityOwner")
  createdBeContacts          BeContacts[]          @relation("beContactsCommunityCreator")
  managedBeContacts            BeContacts[]          @relation("beContactsCommunityManager")

  ownedBeRelations            BeRelations[]          @relation("beRelationsCommunityOwner")
  createdBeRelations          BeRelations[]          @relation("beRelationsCommunityCreator")

  ownedBeCourtships            BeCourtships[]          @relation("beCourtshipsCommunityOwner")
  createdBeCourtships          BeCourtships[]          @relation("beCourtshipsCommunityCreator")

  ownedBeMailboxes            BeMailboxes[]          @relation("beMailboxesCommunityOwner")
  createdBeMailboxes          BeMailboxes[]          @relation("beMailboxesCommunityCreator")

  ownedBeLetters            BeLetters[]          @relation("beLettersCommunityOwner")
  createdBeLetters          BeLetters[]          @relation("beLettersCommunityCreator")

  ownedBeCalendars            BeCalendars[]          @relation("beCalendarsCommunityOwner")
  createdBeCalendars          BeCalendars[]          @relation("beCalendarsCommunityCreator")

  ownedBeSocialCommunities            BeSocialCommunities[]          @relation("beSocialCommunitiesCommunityOwner")
  createdBeSocialCommunity          BeSocialCommunities[]          @relation("beSocialCommunitiesCommunityCreator")

  ownedNexusDays            NexusDays[]          @relation("nexusDaysCommunityOwner")
  createdNexusDays          NexusDays[]          @relation("nexusDaysCommunityCreator")

  ownedNexusWeeks            NexusWeeks[]          @relation("nexusWeeksCommunityOwner")
  createdNexusWeeks          NexusWeeks[]          @relation("nexusWeeksCommunityCreator")

  ownedNexusQuarters            NexusQuarters[]          @relation("nexusQuartersCommunityOwner")
  createdNexusQuarters          NexusQuarters[]          @relation("nexusQuartersCommunityCreator")

  ownedNexusYears            NexusYears[]          @relation("nexusYearsCommunityOwner")
  createdNexusYears          NexusYears[]          @relation("nexusYearsCommunityCreator")

  ownedNexusMoments            NexusMoments[]          @relation("nexusMomentsCommunityOwner")
  createdNexusMoments          NexusMoments[]          @relation("nexusMomentsCommunityCreator")

  ownedNexusSpaces            NexusSpaces[]          @relation("nexusSpacesCommunityOwner")
  createdNexusSpaces          NexusSpaces[]          @relation("nexusSpacesCommunityCreator")

  ownedNexusContexts            NexusContexts[]          @relation("nexusContextsCommunityOwner")
  createdNexusContexts          NexusContexts[]          @relation("nexusContextsCommunityCreator")

  roles                 Roles[]           @relation("communityRoles", fields: [rolesIds], references: [id])
  rolesIds              String[]          @db.ObjectId

  messagesSent          Messages[]        @relation("communityMessagesSent")
  messagesSentIds       String[]          @db.ObjectId

  messagesReceived      Messages[]        @relation("communityMessagesReceived", fields: [messagesReceivedIds], references: [id])
  messagesReceivedIds   String[]          @db.ObjectId

  userOwner             User?             @relation("ownedCommunities", fields: [userOwnerId], references: [id])
  userOwnerId           String?            @db.ObjectId

  userCreator           User?             @relation("createdCommunities", fields: [userCreatorId], references: [id])
  userCreatorId         String?            @db.ObjectId

  @@map("communities")
}

// Email / Matrix / websocket Messages / Whatever
model Messages {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  name              ILocaleString
  description       ILocaleString

  type              EMessageType
  status            EMessageStatus
  nature            EMessageNature
  channels          EMessageChannel[]

  title             ILocaleString
  body              ILocaleString

  queuedOn          DateTime            @db.Date
  scheduledOn       DateTime            @db.Date
  sentOn            DateTime            @db.Date

  fromUser          User?              @relation("userMessagesSent", fields: [fromUserId], references: [id])
  fromUserId        String?              @db.ObjectId

  fromCommunity         Communities?             @relation("communityMessagesSent", fields: [fromCommunityId], references: [id])
  fromCommunityId       String?              @db.ObjectId

  toUser           User[]             @relation("userMessagesReceived", fields: [toUserIds], references: [id])
  toUserIds        String[]            @db.ObjectId

  toCommunities          Communities[]            @relation("communityMessagesReceived", fields: [toCommunitiesIds], references: [id])
  toCommunitiesIds       String[]            @db.ObjectId

  toListings        MakeListings[]          @relation("listingMessagesReceived", fields: [toCommunitiesIds], references: [id])
  toListingsIds     String[]            @db.ObjectId

  userOwner         User?              @relation("messageUserOwner", fields: [userOwnerId], references: [id])
  userOwnerId       String?             @db.ObjectId

  communityOwner        Communities?             @relation("messageCommunityOwner", fields: [communityOwnerId], references: [id])
  communityOwnerId      String?             @db.ObjectId

  userCreator       User?              @relation("messageUserCreator", fields: [userCreatorId], references: [id])
  userCreatorId     String?             @db.ObjectId

  communityCreator      Communities?             @relation("messageCommunityCreator", fields: [communityCreatorId], references: [id])
  communityCreatorId    String?             @db.ObjectId

  @@map("messages")
}

// Flux Auth: broad.
model Roles {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  name              ILocaleString
  slug              String?
  status            ERoleStatus
  type              ERoleType
  nature            ERoleNature

  abilities         Abilities[]         @relation("roleAbilities", fields: [abilitiesIds], references: [id])
  abilitiesIds      String[]            @db.ObjectId

  users             User[]         @relation("roles", fields: [usersIds], references: [id])
  usersIds          String[]        @db.ObjectId
  communities            Communities[]        @relation("communityRoles", fields: [communitiesIds], references: [id])
  communitiesIds         String[]        @db.ObjectId

  @@map("roles")
}

// Flux Auth: strict.
model Abilities {
  id                  String            @id @default(auto()) @map("_id") @db.ObjectId
  name                ILocaleString
  slug                String?
  status              EAbilityStatus
  type                EAbilityType
  nature              EAbilityNature
  target              String?
  action              String?

  features            Features[]        @relation("featureAbilities", fields: [featuresIds], references: [id])
  featuresIds         String[]          @db.ObjectId

  roles               Roles[]           @relation("roleAbilities", fields: [rolesIds], references: [id])
  rolesIds            String[]          @db.ObjectId

  users               User[]            @relation("userAbilities", fields: [usersIds], references: [id])
  usersIds            String[]          @db.ObjectId
  communities              Communities[]          @relation("communityAbilities", fields: [communitiesIds], references: [id])
  communitiesIds           String[]          @db.ObjectId

  userOwner           User?             @relation("abilityUserOwner", fields: [userOwnerId], references: [id])
  userOwnerId         String?           @db.ObjectId

  communityOwner          Communities?           @relation("abilityCommunityOwner", fields: [communityOwnerId], references: [id])
  communityOwnerId        String?           @db.ObjectId

  userCreator         User?             @relation("abilityUserCreator", fields: [userCreatorId], references: [id])
  userCreatorId       String?           @db.ObjectId

  communityCreator        Communities?           @relation("abilityCommunityCreator", fields: [communityCreatorId], references: [id])
  communityCreatorId      String?           @db.ObjectId

  @@map("abilities")
}

// Customer Enablement.
model Services {
  id                  String          @id @default(auto()) @map("_id") @db.ObjectId
  name                ILocaleString
  slug                String?
  status              EServiceStatus
  type                EServiceType
  nature              EServiceNature

  features            Features[]      @relation("serviceFeatures", fields: [featuresIds], references: [id])
  featuresIds         String[]        @db.ObjectId

  users               User[]          @relation("userServices", fields: [usersIds], references: [id])
  usersIds            String[]        @db.ObjectId
  communities              Communities[]        @relation("communityServices", fields: [communitiesIds], references: [id])
  communitiesIds           String[]        @db.ObjectId

  userOwner           User?           @relation("serviceUserOwner", fields: [userOwnerId], references: [id])
  userOwnerId         String?         @db.ObjectId

  communityOwner          Communities?         @relation("serviceCommunityOwner", fields: [communityOwnerId], references: [id])
  communityOwnerId        String?         @db.ObjectId

  userCreator         User?           @relation("serviceUserCreator", fields: [userCreatorId], references: [id])
  userCreatorId       String?         @db.ObjectId

  communityCreator        Communities?         @relation("serviceCommunityCreator", fields: [communityCreatorId], references: [id])
  communityCreatorId      String?         @db.ObjectId

  @@map("services")
}

// Feature Flags.
model Features {
  id                  String          @id @default(auto()) @map("_id") @db.ObjectId
  name                ILocaleString
  slug                String?
  status              EFeatureStatus
  type                EFeatureType
  nature              EFeatureNature

  services            Services[]      @relation("serviceFeatures", fields: [servicesIds], references: [id])
  servicesIds         String[]        @db.ObjectId

  abilities           Abilities[]      @relation("featureAbilities", fields: [abilitiesIds], references: [id])
  abilitiesIds        String[]        @db.ObjectId

  userOwner           User?           @relation("featureUserOwner", fields: [userOwnerId], references: [id])
  userOwnerId         String?         @db.ObjectId

  communityOwner          Communities?         @relation("featureCommunityOwner", fields: [communityOwnerId], references: [id])
  communityOwnerId        String?         @db.ObjectId

  userCreator         User?           @relation("featureUserCreator", fields: [userCreatorId], references: [id])
  userCreatorId       String?         @db.ObjectId

  communityCreator        Communities?         @relation("featureCommunityCreator", fields: [communityCreatorId], references: [id])
  communityCreatorId      String?         @db.ObjectId

  @@map("features")
}

// Settings
model PrivacySettings {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  name              ILocaleString
  slug              String
  description       ILocaleString

  title             ILocaleString
  body              ILocaleString

  purchaseValue     Float
  settledValue      Float

  userOwner         User?              @relation("privacySettingsUserOwner", fields: [userOwnerId], references: [id])
  userOwnerId       String?             @db.ObjectId

  communityOwner        Communities?             @relation("privacySettingsCommunityOwner", fields: [communityOwnerId], references: [id])
  communityOwnerId      String?             @db.ObjectId

  userCreator       User?              @relation("privacySettingsUserCreator", fields: [userCreatorId], references: [id])
  userCreatorId     String?             @db.ObjectId

  communityCreator      Communities?             @relation("privacySettingsCommunityCreator", fields: [communityCreatorId], references: [id])
  communityCreatorId    String?             @db.ObjectId

  @@map("PrivacySettings")
}

// globals

type ILocaleString {
  es        String?
  ca        String?
  ga        String?
  eu        String?
  en        String?
  cy        String?
  mt        String?
  is        String?
  it        String?
  pt        String?
  de        String?
  fr        String?
  pl        String?
  et        String?
  cz        String?
  sv        String?
  da        String?
  nl        String?
  nb        String?
  nn        String?
  ro        String?
  sr        String?
  sl        String?
  lv        String?
  lt        String?
  hr        String?
  el        String?
  hu        String?
  bg        String?
  bs        String?
  sq        String?
  ja        String?
  ru        String?
  ar        String?
  he        String?
  zh        String?
  gl        String?
  sw        String?
  hi        String?
  ms        String?
  bn        String?
  pa        String?
  tr        String?
  fi        String?
  uk        String?
}

enum ERating {
  ZERO
  ONE
  TWO
  THREE
  FOUR
  FIVE
  SIX
  SEVEN
  EIGHT
  NINE
  TEN
}

enum EImpression {
  POSITIVE
  NEGATIVE
  NEUTRAL
}

enum ECurrency {
  EUR
  NOK
  SEK
  CHF
  GBP
  CZK
  PLZ
  USD
}

enum ECadence {
  MINUTE
  HALF_HOUR
  HOURLY
  FOUR_HOURS
  EIGHT_HOURS
  TWELVE_HOURS
  DAILY
  TWO_DAYS
  THREE_DAYS
  WORK_DAYS
  WEEKENDS
  WEEKLY
  BI_WEEKLY
  MONTHLY
  BI_MONTHLY
  QUARTERLY
  BI_QUARTERLY
  SEMESTER
  YEARLY
  TWO_YEARS
  THREE_YEARS
  FIVE_YEARS
}


enum ECommunitiesStatus {
  PRIVATE
  INTERNAL
  PUBLIC
  DELETED
}

// taxonomies

enum ETaxonomyStatus {
  ACTIVE
  PENDING
  INACTIVE
  DELETED
}

enum ETaxonomyType {
  TAG
  ANOTHER_TAG
}

enum ETaxonomyNature {
  SEGMENTED
  PUBLIC
}


// offers

enum EOfferStatus {
  ACTIVE
  PENDING
  INACTIVE
  DELETED
}

type ITaxesAndFees {
  taxes       Float
  fees        Float
  shipping    Float
}

// communities

enum ECommunitiestatus {
  ACTIVE
  PENDING
  INACTIVE
  DELETED
}


// listing

enum EListingStatus {
  ACTIVE
  PENDING
  INACTIVE
  DELETED
}


// messages

enum EMessageType {
  ANNOUNCEMENT
  CAMPAIGN
  REVIEW
  CHAT
  SUPPORT
}

enum EMessageStatus {
  SCHEDULED
  PENDING
  DELIVERED
  VIEWED
}

enum EMessageNature {
  PRIVATE
  SEMI_PRIVATE
  PUBLIC
}

enum EMessageChannel {
  PUSH_NOTIFICATION
  EMAIL
  CHAT
  SUPPORT_PANEL
  Community_CHAT
}


// roles
enum ERoleStatus {
  ACTIVE
  PENDING
  INACTIVE
  DELETED
}

enum ERoleNature {
  INTERNAL
  PUBLIC
}

enum ERoleType {
  ADMIN
  USER
  Community
  CUSTOMER
  PROVIDER
  INTERNAL_DEV
  INTERNAL_MKT
  INTERNAL_SALES
  INTERNAL_HR
  INTERNAL_LEAD
  INTERNAL_OPS
}

enum ERoleAbilites {
  SUDO
  VIEW_PRIVATE
  EDIT_PRIVATE
  DELETE_PRIVATE
  CREATE_PRIVATE
  CREATE_MESSAGE
  CREATE_BROADCAST
  CREATE_LISTING
  MANAGE_TAXONOMIES
  MANAGE_Community
  MANAGE_USER
  MANAGE_REVIEWS
  MANAGE_ROLES
}

// services
enum EServiceStatus {
  ACTIVE
  INACTIVE
  DELINQUENT
}

enum EServiceNature {
  PRIVATE
  PUBLIC
  COMMON
}

enum EServiceType {
  COMMUNITY
  FINANCIAL
  CONSUMER
  MERCHANT
}

// features
enum EFeatureStatus {
  ACTIVE
  INACTIVE
  NIGHTLY
}

enum EFeatureNature {
  EXPERIMENTAL
  LTS
  LEGACY
}

enum EFeatureType {
  INTERFACE
  INTEGRATION
  EXPERIENCE
  PERFORMANCE
  SECURITY
}

// abilities
enum EAbilityStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}

enum EAbilityNature {
  ROLE_BASED
  BILLING_BASED
  PRIVILEGE
  COMMON
  TEMPORARY
}

enum EAbilityType {
  C
  R
  U
  D
}

// users

type IPosix {
  lat    Float
  lng    Float
  radius Float
}

type IAddress {
  street         String
  additional     String
  number         String
  city           String
  province       String
  country        String
  zipCode        String
  phone          String
}

type ILocation {
  geo            IPosix?
  address        IAddress?
  name           String
}

type AbilitiesName {
  ar String?
  bn String?
  ca String?
  cz String?
  da String?
  de String?
  el String?
  en String?
  es String
  et String?
  eu String?
  fi String?
  fr String?
  gl String?
  he String?
  hi String?
  hu String?
  it String?
  ja String?
  ms String?
  nl String?
  pa String?
  pl String?
  pt String?
  ro String?
  ru String?
  sv String?
  sw String?
  tr String?
  uk String?
  zh String?
}

type FeaturesName {
  es String
}

type ListingsDescription {
  es String
}

type ListingsLocation {
  address ListingsLocationAddress
  geo     ListingsLocationGeo
  name    String
}

type ListingsLocationAddress {
  additional String
  city       String
  country    String
  number     String
  phone      String
  province   String
  street     String
  zipCode    String
}

type ListingsLocationGeo {
  lat    Float
  lng    Float
  radius Float
}

type ListingsTitle {
  es String
}

type MessagesBody {
  es String
}

type MessagesDescription {
  es String
}

type MessagesName {
  es String
}

type MessagesTitle {
  es String
}

type RolesName {
  es String
}

type ServicesName {
  ar String?
  bn String?
  ca String?
  cz String?
  da String?
  de String?
  el String?
  en String?
  es String
  et String?
  eu String?
  fi String?
  fr String?
  gl String?
  he String?
  hi String?
  hu String?
  it String?
  ja String?
  ms String?
  nl String?
  pa String?
  pl String?
  pt String?
  ro String?
  ru String?
  sv String?
  sw String?
  tr String?
  uk String?
  zh String?
}

type TaxonomiesDescription {
  es String
}

type TaxonomiesName {
  es String
}

type UserLocation {
  name String
}