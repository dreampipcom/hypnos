// to-do: _feel.prisma
// ---- @INT: Feel: u k, g? ----
// 
// Feel
// Public Moods
model FeelSocial {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  name              ILocaleString
  slug              String
  description       ILocaleString

  title             ILocaleString
  body              ILocaleString

  beSocialProfiles  BeSocial[]              @relation("feelSocialBeSocialProfiles", fields: [beSocialProfilesIds], references: [id])
  beSocialProfilesIds       String[]             @db.ObjectId

  doSocialProfiles  DoSocial[]              @relation("feelSocialDoSocialProfiles", fields: [doSocialProfilesIds], references: [id])
  doSocialProfilesIds       String[]             @db.ObjectId

  makeSocialProfiles  MakeSocial[]              @relation("feelSocialMakeSocialProfiles", fields: [makeSocialProfilesIds], references: [id])
  makeSocialProfilesIds       String[]             @db.ObjectId

  investSocialProfiles  InvestSocial[]              @relation("feelSocialInvestSocialProfiles", fields: [investSocialProfilesIds], references: [id])
  investSocialProfilesIds       String[]             @db.ObjectId

  writeSocialProfiles  WriteSocial[]              @relation("feelSocialWriteSocialProfiles", fields: [writeSocialProfilesIds], references: [id])
  writeSocialProfilesIds       String[]             @db.ObjectId


  loggedOn          DateTime            @db.Date
  loggedFor         DateTime[]          @db.Date
  publishedOn       DateTime            @db.Date

  userOwner         User?              @relation("feelSocialUserOwner", fields: [userOwnerId], references: [id])
  userOwnerId       String?             @db.ObjectId

  userCreator       User?              @relation("feelSocialUserCreator", fields: [userCreatorId], references: [id])
  userCreatorId     String?             @db.ObjectId

  @@map("feelSocial")
}