{
  "name": "@dreampipcom/hypnos",
  "description": "DreamPip's Serverless Micro-services Hub.",
  "type": "module",
  "version": "1.0.0",
  "private": true,
  "author": "Angelo Reale",
  "license": "HPL3-ECO-AND-ANC",
  "scripts": {
    "schema:migrate:auth": "npx prisma migrate dev --schema prisma/schema-auth.prisma",
    "schema:migrate:public": "npx prisma migrate dev --schema prisma/schema-public.prisma",
    "schema:migrate:phi": "npx prisma migrate dev --schema prisma/schema-phi.prisma",
    "schema:migrate:pii": "npx prisma migrate dev --schema prisma/schema-pii.prisma",
    "schema:migrate:fii": "npx prisma migrate dev --schema prisma/schema-fii.prisma",
    "schema:migrate:gii": "npx prisma migrate dev --schema prisma/schema-gii.prisma",
    "schema:migrate:feel": "npx prisma migrate dev --schema prisma/schema-feel.prisma",
    "schema:migrate:do": "npx prisma migrate dev --schema prisma/schema-do.prisma",
    "schema:migrate:write": "npx prisma migrate dev --schema prisma/schema-write.prisma",
    "schema:migrate:be": "npx prisma migrate dev --schema prisma/schema-be.prisma",
    "schema:migrate:make": "npx prisma migrate dev --schema prisma/schema-make.prisma",
    "schema:migrate:invest": "npx prisma migrate dev --schema prisma/schema-invest.prisma",
    "schema:migrate:views": "npx prisma migrate dev --schema prisma/schema-views.prisma",
    "schema:migrate:private": "npm run schema:migrate:auth && npm run schema:migrate:phi && npm run schema:migrate:pii && npm run schema:migrate:fii && npm run schema:migrate:gii && npm run schema:migrate:feel && npm run schema:migrate:do && npm run schema:migrate:write && npm run schema:migrate:be && npm run schema:migrate:make && npm run schema:migrate:invest && npm run schema:migrate:views && npm run schema:migrate:public",
    "schema:migrate:all": "npm run schema:migrate:private && npm run schema:migrate:public",
    "schema:pull:phi": "npx prisma db pull --schema prisma/schema-phi.prisma",
    "schema:pull:pii": "npx prisma db pull --schema prisma/schema-pii.prisma",
    "schema:pull:fii": "npx prisma db pull --schema prisma/schema-fii.prisma",
    "schema:pull:gii": "npx prisma db pull --schema prisma/schema-gii.prisma",
    "schema:pull:feel": "npx prisma db pull --schema prisma/schema-feel.prisma",
    "schema:pull:do": "npx prisma db pull --schema prisma/schema-do.prisma",
    "schema:pull:write": "npx prisma db pull --schema prisma/schema-write.prisma",
    "schema:pull:be": "npx prisma db pull --schema prisma/schema-be.prisma",
    "schema:pull:make": "npx prisma db pull --schema prisma/schema-make.prisma",
    "schema:pull:invest": "npx prisma db pull --schema prisma/schema-invest.prisma",
    "schema:pull:views": "npx prisma db pull --schema prisma/schema-views.prisma",
    "schema:pull:auth": "npx prisma db pull --schema prisma/schema-auth.prisma",
    "schema:pull:public": "npx prisma db pull --schema prisma/schema-public.prisma",
    "schema:pull:private": "npm run schema:pull:auth && npm run schema:pull:phi && npm run schema:pull:pii && npm run schema:pull:fii && npm run schema:pull:gii && npm run schema:pull:feel && npm run schema:pull:do && npm run schema:pull:write && npm run schema:pull:be && npm run schema:pull:invest && npm run schema:pull:views && npm run schema:pull:public",
    "schema:pull:all": "npm run schema:pull:private && npm run schema:pull:public",
    "schema:push:phi": "npx prisma db push --schema prisma/schema-phi.prisma",
    "schema:push:pii": "npx prisma db push --schema prisma/schema-pii.prisma",
    "schema:push:fii": "npx prisma db push --schema prisma/schema-fii.prisma",
    "schema:push:gii": "npx prisma db push --schema prisma/schema-gii.prisma",
    "schema:push:feel": "npx prisma db push --schema prisma/schema-feel.prisma",
    "schema:push:do": "npx prisma db push --schema prisma/schema-do.prisma",
    "schema:push:write": "npx prisma db push --schema prisma/schema-write.prisma",
    "schema:push:be": "npx prisma db push --schema prisma/schema-be.prisma",
    "schema:push:make": "npx prisma db push --schema prisma/schema-make.prisma",
    "schema:push:invest": "npx prisma db push --schema prisma/schema-invest.prisma",
    "schema:push:views": "npx prisma db push --schema prisma/schema-views.prisma",
    "schema:push:public": "npx prisma db push --schema prisma/schema-public.prisma",
    "schema:push:auth": "npx prisma db push --schema prisma/schema-auth.prisma",
    "schema:push:private": "npm run schema:push:auth && npm run schema:push:phi && npm run schema:push:pii && npm run schema:push:fii && npm run schema:push:gii && npm run schema:push:feel && npm run schema:push:do && npm run schema:push:write && npm run schema:push:be && npm run schema:push:invest && npm run schema:push:views && npm run schema:push:public",
    "schema:push:all": "npm run schema:push:private && npm run schema:push:public",
    "schema:generate:phi": "npx prisma generate --no-engine --schema prisma/schema-phi.prisma",
    "schema:generate:pii": "npx prisma generate --no-engine --schema prisma/schema-pii.prisma",
    "schema:generate:fii": "npx prisma generate --no-engine --schema prisma/schema-fii.prisma",
    "schema:generate:gii": "npx prisma generate --no-engine --schema prisma/schema-gii.prisma",
    "schema:generate:feel": "npx prisma generate --no-engine --schema prisma/schema-feel.prisma",
    "schema:generate:do": "npx prisma generate --no-engine --schema prisma/schema-do.prisma",
    "schema:generate:write": "npx prisma generate --no-engine --schema prisma/schema-write.prisma",
    "schema:generate:be": "npx prisma generate --no-engine --schema prisma/schema-be.prisma",
    "schema:generate:make": "npx prisma generate --no-engine --schema prisma/schema-make.prisma",
    "schema:generate:invest": "npx prisma generate --no-engine --schema prisma/schema-invest.prisma",
    "schema:generate:views": "npx prisma generate --no-engine --schema prisma/schema-views.prisma",
    "schema:generate:public": "npx prisma generate --no-engine --schema prisma/schema-public.prisma",
    "schema:generate:auth": "npx prisma generate --no-engine --schema prisma/schema-auth.prisma",
    "schema:generate:private": "npm run schema:generate:auth && npm run schema:generate:phi && npm run schema:generate:pii && npm run schema:generate:fii && npm run schema:generate:gii && npm run schema:generate:feel && npm run schema:generate:do && npm run schema:generate:write && npm run schema:generate:be && npm run schema:generate:invest && npm run schema:generate:views && npm run schema:generate:public",
    "schema:generate:public": "npx prisma generate --no-engine --schema=./prisma/schema-public.prisma",
    "schema:generate:all": "npm run schema:generate:private && npm run schema:generate:public",
    "schema:generate:standalone:phi": "npx prisma generate --schema prisma/schema-phi.prisma",
    "schema:generate:standalone:pii": "npx prisma generate --schema prisma/schema-pii.prisma",
    "schema:generate:standalone:fii": "npx prisma generate --schema prisma/schema-fii.prisma",
    "schema:generate:standalone:gii": "npx prisma generate --schema prisma/schema-gii.prisma",
    "schema:generate:standalone:feel": "npx prisma generate --schema prisma/schema-feel.prisma",
    "schema:generate:standalone:do": "npx prisma generate --schema prisma/schema-do.prisma",
    "schema:generate:standalone:write": "npx prisma generate --schema prisma/schema-write.prisma",
    "schema:generate:standalone:be": "npx prisma generate --schema prisma/schema-be.prisma",
    "schema:generate:standalone:make": "npx prisma generate --schema prisma/schema-make.prisma",
    "schema:generate:standalone:invest": "npx prisma generate --schema prisma/schema-invest.prisma",
    "schema:generate:standalone:views": "npx prisma generate --schema prisma/schema-views.prisma",
    "schema:generate:standalone:public": "npx prisma generate --schema prisma/schema-public.prisma",
    "schema:generate:standalone:auth": "npx prisma generate --schema prisma/schema-auth.prisma",
    "schema:generate:standalone:private": "npm run schema:generate:standalone:auth && npm run schema:generate:standalone:phi && npm run schema:generate:standalone:pii && npm run schema:generate:standalone:fii && npm run schema:generate:standalone:gii && npm run schema:generate:standalone:feel && npm run schema:generate:standalone:do && npm run schema:generate:standalone:write && npm run schema:generate:standalone:be && npm run schema:generate:standalone:invest && npm run schema:generate:standalone:views && npm run schema:generate:standalone:public",
    "schema:generate:standalone:public": "npx prisma generate --schema=./prisma/schema-public.prisma",
    "schema:generate:standalone:all": "npm run schema:generate:standalone:private && npm run schema:generate:standalone:public",
    "schema:seed:private": "NEXUS_STANDALONE=true npm run schema:generate:private:standalone && prisma db seed --schema=./prisma/schema-auth.prisma -- private",
    "schema:seed:getseeds": "NEXUS_STANDALONE=true npm run schema:generate:private:standalone && node --loader ts-node/esm prisma/getSeeds.mts --schema=./prisma/schema-auth.prisma -- private",
    "schema:seed:public": "NEXUS_STANDALONE=true npm run schema:generate:private:standalone && npm run schema:generate:public:standalone && prisma db seed --schema=./prisma/schema-public.prisma -- public",
    "schema:seed:mock": "NEXUS_STANDALONE=true npm run schema:generate:private:standalone && npm run schema:generate:public:standalone && prisma db seed --schema=./prisma/schema-public.prisma -- mock",
    "schema:seed:all": "NEXUS_STANDALONE=true npm run schema:seed:private && npm run schema:seed:public",
    "dev": "npm run schema:generate:all && next dev -p 3001",
    "dev:vm": "npm run schema:generate:all:standalone && next dev -p 3001",
    "build": "npm run schema:generate:all && next build",
    "build:vm": "npm run schema:generate:all:standalone && next build",
    "start": "next start",
    "start:pm2": "pm2 list && pm2-docker start pm2.json",
    "start:vm": "HOSTNAME='0.0.0.0' node server.js",
    "start:vm:pm2": "pm2 list && pm2-docker start pm2-vm.json",
    "lint": "next lint",
    "format": "next lint && prettier --check --ignore-path .gitignore --ignore-path .prettierignore .",
    "format:fix": "next lint --fix && prettier --write --ignore-path .gitignore --ignore-path .prettierignore .",
    "prepare": "husky",
    "npm:wipe": "rm -rf node_modules && npm cache clean --force",
    "npm:reset": "npm run npm:wipe && npm i",
    "postinstall": "node ./postInstall.js"
  },
  "prisma": {
    "seed": "node --loader ts-node/esm prisma/seed.mts"
  },
  "dependencies": {
    "@sentry/nextjs": "8.22.0",
    "next": "14.2.15"
  },
  "devDependencies": {
    "@auth/prisma-adapter": "2.4.2",
    "@babel/core": "7.23.7",
    "@babel/eslint-parser": "7.23.3",
    "@faker-js/faker": "8.4.1",
    "@prisma/client": "5.18.0",
    "@prisma/extension-accelerate": "1.1.0",
    "@prisma/nextjs-monorepo-workaround-plugin": "5.18.0",
    "@types/json-schema": "7.0.15",
    "@types/lodash": "^4.17.7",
    "@types/node": "20",
    "@types/react": "18.3.2",
    "@types/uuid": "9.0.8",
    "@typescript-eslint/eslint-plugin": "6.19.0",
    "@upstash/ratelimit": "2.0.1",
    "@vercel/edge": "1.1.2",
    "@vercel/functions": "1.4.0",
    "@vercel/kv": "2.0.0",
    "bson": "6.8.0",
    "dotenv": "16.4.5",
    "eslint": "8",
    "eslint-config-alloy": "5.1.2",
    "eslint-config-next": "14.0.4",
    "husky": "9.0.11",
    "lodash": "^4.17.21",
    "mongodb": "5.0.0",
    "next-auth": "5.0.0-beta.20",
    "nodemailer": "6.9.14",
    "patch-package": "8.0.0",
    "pm2": "5.4.2",
    "prettier": "3.2.4",
    "prisma": "5.18.0",
    "server-only": "0.0.1",
    "socket.io": "4.7.5",
    "ts-node": "10.9.2",
    "typescript": "5",
    "uuid": "9.0.1"
  }
}
